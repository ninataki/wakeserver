#!/usr/bin/python

import os
import sys
import signal
import time
import json
from collections import namedtuple
from wakeserver import monitoring, plugin, webservice

PIDFILE =          "/run/wakeserverd.pid"
STATUS_DIR =       "/run/wakeserver"
ERROR_FILE =       "/run/wakeserver/error"
MAIN_CONF =        "/var/www/wakeserver/wakeserver.conf"
SERVERS_CONF =     "/var/www/wakeserver/servers.conf"

def daemonize(inDebug):
    if not inDebug:
        os.chdir("/")

    if not os.path.isdir(STATUS_DIR):
        os.mkdir(STATUS_DIR)
        os.chmod(STATUS_DIR, 0777)
    if not inDebug:
        sys.stdin.close()
        sys.stdout.close()
        sys.stderr.close()
        sys.stdin = open("/dev/null", "r")
        sys.stdout = open("/dev/null", "w")
        sys.stderr = open(ERROR_FILE, "w")

    return True

def main():
    global MAIN_CONF
    global SERVERS_CONF
    if 'SERVERS_CONF' in os.environ:
        SERVERS_CONF = os.environ['SERVERS_CONF']
    if 'WAKESERVER_CONF' in os.environ:
        MAIN_CONF = os.environ['WAKESERVER_CONF']
    print 'WAKESERVER_CONF: ' + MAIN_CONF
    print 'SERVERS_CONF: ' + SERVERS_CONF
    
    if daemonize('DEBUG' in os.environ):
        conf = namedtuple('Config', ('main', 'servers'))
        with open(MAIN_CONF) as f:
            conf.main = json.load(f)
            
        with open(SERVERS_CONF) as f:
            conf.servers = json.load(f)

        pool = plugin.PluginPool(conf)

        monitor = monitoring.Monitor(conf, pool)
        monitoring.monitor = monitor
        monitor.start()

        webservice.serveForever(monitor, pool)

if __name__ == '__main__':
    def sigintHandler(signal, frame):
        quit()
    signal.signal(signal.SIGINT, sigintHandler)
    main()
    sys.exit(0)
